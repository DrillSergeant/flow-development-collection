name: build

on:
  push:
    branches: [ master, '[1-9][0-9].[0-9]' ]
  pull_request:
    branches: [ master, '[1-9][0-9].[0-9]' ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip travis]')"
    name: "PHP ${{ matrix.php-versions }} Test ${{ matrix.static-analysis != 'no' && matrix.static-analysis || '' }} (deps: ${{ matrix.dependencies }})"

    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.3', '7.4']
        dependencies: ['highest']
        composer-arguments: [''] # to run --ignore-platform-reqs in experimental builds
        static-analysis: ['no']
        experimental: [false]
        include:
          - php-versions: '7.3'
            static-analysis: 'psalm'
            experimental: false
            dependencies: 'highest'

          # Experimental build for PHP 8
          #- php-versions: '8.0'
          #  composer-arguments: '--ignore-platform-reqs'
          #  static-analysis: 'no'
          #  experimental: true
          #  dependencies: 'highest'

          # Build for minimum dependencies. Fails right now, hence deactivated.
          #- php-versions: '7.3'
          #  static-analysis: 'no'
          #  experimental: false
          #  dependencies: 'lowest'

    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.2
        env:
          MYSQL_USER: neos
          MYSQL_PASSWORD: neos
          MYSQL_DATABASE: flow_functional_testing
          MYSQL_ROOT_PASSWORD: neos
        ports:
          - "3306:3306"
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:9.5
        env:
          POSTGRES_USER: neos
          POSTGRES_PASSWORD: neos
          POSTGRES_DB: flow_functional_testing
        ports:
          - "5432:5432"
        options:  --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      FLOW_TARGET_VERSION: ${{ github.base_ref }}
      FLOW_TARGET_REPOSITORY: ${{ github.repository }}
      FLOW_CONTEXT: Testing
      FLOW_DIST_FOLDER: flow-development-distribution
      FLOW_FOLDER: flow-development-collection

    defaults:
      run:
        working-directory: ${{ env.FLOW_DIST_FOLDER }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: ${{ env.FLOW_FOLDER }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, xml, json, zlib, iconv, intl, pdo_sqlite, mysql, pgsql, redis, memcached
        coverage: xdebug #optional
        ini-values: opcache.fast_shutdown=0

    - name: Checkout development distribution
      uses: actions/checkout@v2
      with:
        repository: neos/flow-development-distribution
        ref: ${{ env.FLOW_TARGET_VERSION }}
        path: ${{ env.FLOW_DIST_FOLDER }}

    - name: Set alias branch name
      run: if [ "${FLOW_TARGET_VERSION}" == "master" ]; then echo "FLOW_BRANCH_ALIAS=dev-master"; else echo "FLOW_BRANCH_ALIAS=${FLOW_TARGET_VERSION}.x-dev"; fi >> $GITHUB_ENV

    - name: Update composer.json
      run: |
        git -C ../${{ env.FLOW_FOLDER }} checkout -b build
        composer config repositories.flow '{ "type": "path", "url": "../${{ env.FLOW_FOLDER }}", "options": { "symlink": false } }'
        composer require --no-update ${{ github.repository }}:"dev-build as ${{ env.FLOW_BRANCH_ALIAS }}"

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/composer
          ${{ env.FLOW_DIST_FOLDER }}
        key: php-${{ matrix.php-versions }}-${{ matrix.dependencies }}${{ hashFiles('**/composer.json') }}
        restore-keys: php-${{ matrix.php-versions }}-${{ matrix.dependencies }}

    - name: Install dependencies
      run: |
        composer ${{ matrix.dependencies == 'locked' && 'install' || 'update' }} --no-progress --no-interaction ${{ matrix.dependencies == 'lowest' && '--prefer-lowest' || '' }} ${{ matrix.composer-arguments }}

    - name: Setup Flow configuration
      run: |
        rm -f Configuration/Routes.yaml
        cp Configuration/Settings.yaml.example Configuration/Settings.yaml
        cat <<EOF >> Configuration/Settings.yaml
        Neos:
          Flow:
            persistence:
              backendOptions:
                host: '127.0.0.1'
                driver: pdo_mysql
                user: 'neos'
                password: 'neos'
                dbname: 'flow_functional_testing'
        EOF
        cp Configuration/Settings.yaml Configuration/Testing/

    - name: Static analysis
      if: matrix.static-analysis == 'psalm'
      run: composer test-static

    - name: Run unit tests
      if: matrix.static-analysis == 'no'
      run: composer test-unit

    - name: Run functional tests
      if: matrix.static-analysis == 'no'
      run: composer test-func

    - name: Run behat tests
      if: matrix.static-analysis == 'no'
      #if: env.BEHAT == true
      run: |
        FLOW_CONTEXT=Testing/Behat ./flow behat:setup && ./flow doctrine:create
        bin/behat --stop-on-failure -f progress -c Packages/Framework/Neos.Flow/Tests/Behavior/behat.yml.dist

    - name: Setup Flow configuration (PGSQL)
      run: |
        cp Configuration/Settings.yaml.example Configuration/Settings.yaml
        cat <<EOF >> Configuration/Settings.yaml
        Neos:
          Flow:
            persistence:
              backendOptions:
                host: '127.0.0.1'
                port: 5432
                driver: pdo_pgsql
                user: 'neos'
                password: 'neos'
                dbname: 'flow_functional_testing'
        EOF
        cp Configuration/Settings.yaml Configuration/Testing/

    - name: Run unit tests (PGSQL)
      if: matrix.static-analysis == 'no'
      run: composer test-unit

    - name: Run functional tests (PGSQL)
      if: matrix.static-analysis == 'no'
      run: composer test-func

    - name: Run behat tests (PGSQL)
      if: matrix.static-analysis == 'no'
      #if: env.BEHAT == true
      run: |
        FLOW_CONTEXT=Testing/Behat ./flow behat:setup && ./flow doctrine:create
        bin/behat --stop-on-failure -f progress -c Packages/Framework/Neos.Flow/Tests/Behavior/behat.yml.dist
