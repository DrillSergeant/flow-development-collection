name: build

on:
  push:
    branches: [ master, '[1-9][0-9].[0-9]' ]
  pull_request:
    branches: [ master, '[1-9][0-9].[0-9]' ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.2
        env:
          MYSQL_USER: neos
          MYSQL_PASSWORD: neos
          MYSQL_DATABASE: flow_functional_testing
          MYSQL_ROOT_PASSWORD: neos
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      NEOS_TARGET_VERSION: ${{ github.base_ref }}
      NEOS_TARGET_REPOSITORY: ${{ github.repository }}
      FLOW_CONTEXT: Testing
      FLOW_DIST_FOLDER: flow-development-distribution
      FLOW_FOLDER: flow-development-collection

    defaults:
      run:
        working-directory: ${{ env.FLOW_DIST_FOLDER }}

    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.3', '7.4']
        composer-arguments: [''] # to run --prefer-lowest in a single included strategy
        static-analysis: ['no']
        include:
          - php-versions: '7.3'
            composer-arguments: ''
            static-analysis: 'psalm'
          - php-versions: '7.3'
            composer-arguments: '--prefer-lowest'
            static-analysis: 'no'

    name: "PHP ${{ matrix.php-versions }} Test (static: ${{ matrix.static-analysis }} ${{ matrix.composer-arguments }})"

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: ${{ env.FLOW_FOLDER }}

    - name: Alias checked out branch
      run: git checkout -b build
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, xml, json, zlib, iconv, intl, pdo_sqlite, mysql
        coverage: xdebug #optional
        ini-values: opcache.fast_shutdown=0

    - name: Checkout development distribution
      uses: actions/checkout@v2
      with:
        repository: neos/flow-development-distribution
        ref: ${{ env.FLOW_TARGET_VERSION }}
        path: ${{ env.FLOW_DIST_FOLDER }}

    - name: Set alias branch name
      run: if [ "${FLOW_TARGET_VERSION}" == "master" ]; then echo "FLOW_BRANCH_ALIAS=dev-master"; else echo "FLOW_BRANCH_ALIAS=${FLOW_TARGET_VERSION}.x-dev"; fi >> $GITHUB_ENV

    - name: Update composer.json
      run: |
        composer config repositories.flow path ../${{ env.FLOW_FOLDER }}
        composer require --no-update ${{ github.repository }}:"dev-build as ${{ env.FLOW_BRANCH_ALIAS }}"

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.FLOW_DIST_FOLDER }}
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: |
        composer update --no-progress --no-interaction ${{ matrix.composer-arguments }}

    - name: Setup Flow configuration
      run: |
        rm -f Configuration/Routes.yaml
        cp Configuration/Settings.yaml.example Configuration/Settings.yaml
        cat <<EOF > Configuration/Settings.yaml
        Neos:
          Flow:
            persistence:
              backendOptions:
                host: '127.0.0.1'
                driver: pdo_mysql
                user: 'neos'
                password: 'neos'
                dbname: 'flow_functional_testing'
        EOF
        cp Configuration/Settings.yaml Configuration/Testing/

    - name: Static analysis
      if: matrix.static-analysis == 'psalm'
      run: composer test-static

    - name: Run unit tests
      if: matrix.static-analysis == 'no'
      run: composer test-unit

    - name: Run functional tests
      if: matrix.static-analysis == 'no'
      run: composer test-func

    - name: Run behat tests
      if: matrix.static-analysis == 'no'
      #if: env.BEHAT == true
      run: |
        FLOW_CONTEXT=Testing/Behat ./flow behat:setup && ./flow doctrine:create
        bin/behat --stop-on-failure -f progress -c Packages/Framework/Neos.Flow/Tests/Behavior/behat.yml.dist
